# Generated by Django 4.1.3 on 2023-05-06 21:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("meals", "0014_mealitem_preparation_description_mealitem_video_link"),
    ]

    operations = [
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subscription_id",
                    models.CharField(max_length=10, verbose_name="Subscription ID"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Client",
                "verbose_name_plural": "Clients",
            },
        ),
        migrations.CreateModel(
            name="ClientData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("weight", models.IntegerField(verbose_name="Weight")),
                ("height", models.IntegerField(verbose_name="Height")),
                ("age", models.IntegerField(verbose_name="Age")),
                ("body_fat", models.IntegerField(verbose_name="Body fat percentage")),
                (
                    "body_fat_calc_method",
                    models.CharField(
                        max_length=350, verbose_name="Body fat calculation method"
                    ),
                ),
                (
                    "training_volume",
                    models.CharField(max_length=150, verbose_name="Training volume"),
                ),
                (
                    "activity_per_day",
                    models.CharField(max_length=100, verbose_name="Activity per day"),
                ),
                ("goal", models.CharField(max_length=100, verbose_name="Client goal")),
                (
                    "preferred_schema",
                    models.CharField(
                        max_length=350, verbose_name="Client Prefered Schema"
                    ),
                ),
                (
                    "can_take_protein_supplement",
                    models.BooleanField(
                        default=False, verbose_name="Can take protein supplement"
                    ),
                ),
                (
                    "number_of_meals",
                    models.IntegerField(verbose_name="Prefered number of meals"),
                ),
                (
                    "lean_body_mass",
                    models.IntegerField(default=100, verbose_name="Lean body mass"),
                ),
                ("bmr", models.IntegerField(default=100, verbose_name="BMR")),
                (
                    "total_calories",
                    models.IntegerField(default=100, verbose_name="Total calories"),
                ),
                (
                    "calories_deficit",
                    models.IntegerField(default=100, verbose_name="Calories deficit"),
                ),
                (
                    "protein_grams",
                    models.IntegerField(default=100, verbose_name="Protein grams"),
                ),
                (
                    "fat_grams",
                    models.IntegerField(default=100, verbose_name="Fat grams"),
                ),
                (
                    "carb_grams",
                    models.IntegerField(default=100, verbose_name="Carb grams"),
                ),
                (
                    "generate_using_this_data",
                    models.BooleanField(
                        default=False, verbose_name="Generate program using this data"
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
                (
                    "client",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="clients.client",
                        verbose_name="Related Client",
                    ),
                ),
                (
                    "excluded_food_items",
                    models.ManyToManyField(
                        related_name="excluded_food_items",
                        to="meals.fooditem",
                        verbose_name="Client excluded food items",
                    ),
                ),
            ],
            options={
                "verbose_name": "Client Data",
                "verbose_name_plural": "Clients Data",
            },
        ),
    ]
